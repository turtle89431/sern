<app>
    <nav class="navbar navbar-expand-sm navbar-dark bg-primary" id="nav">
        <a class="navbar-brand" href="#">
            {props.title}
        </a>
        <button class="navbar-toggler d-lg-none" type="button" data-toggle="collapse" data-target="#collapsibleNavId" aria-controls="collapsibleNavId" aria-expanded="false" aria-label="Toggle navigation"></button>
        <div class="collapse navbar-collapse" id="collapsibleNavId">
            <ul if={state.pages} class="navbar-nav mr-auto mt-2 mt-lg-0">
                <div each={page in state.pages}>
                    <li class={(page.path==window.location.pathname)? "nav-item active": "nav-item"}>
                        <a class="nav-link" href={page.path}>{page.label} </a>
                    </li>
                </div>
            </ul>
        </div>
    </nav>
    <div class="container-fluid main ">
        <div class="row ">
            <div class="col">
                <router>
                    <div if={state.showNotFound} class="row">
                        <div class="col">
                            <not-found />
                        </div>
                    </div>
                    <div if={!state.showNotFound} class="row">
                        <div class="col">
                            <route each={page in state.pages} path={page.path}>
                                <main is={page.componentName} />
                            </route>
                        </div>
                    </div>
                </router>
            </div>
        </div>
    </div>



    <script>
        import {
            Router,
            Route,
            route,
            toRegexp,
            match
        } from '@riotjs/route'
        import lazy from '@riotjs/lazy'
        import Loader from './components/includes/loader/loader.riot'
        import NotFound from './pages/not-found.riot'
        import pages from './pages'

        export default {
            components: {
                Router,
                Route,
                NotFound,
                Home: lazy(Loader, () =>
                    import (
                        /* webpackPrefetch: true, webpackChunkName: 'pages/home' */
                        './pages/home.riot'
                    )),
                About: lazy(Loader, () =>
                    import (
                        /* webpackPrefetch: true, webpackChunkName: 'pages/about' */
                        './pages/about.riot'
                    )),
            },
            state: {
                pages: pages,
                showNotFound: false,
                activePage: null
            },

            onBeforeMount({
                isServer
            }) {
                // create a stream on all routes to catch the not-found page
                this.anyRouteStream = route('(.*)')
                this.anyRouteStream.on.value(this.onAnyRoute)

            },
            onUpdated() {
                console.log(window.location.href, window.location.pathname)
            },
            onAnyRoute(path) {
                // show the not found page if none of the page paths are matched
                const activePage = pages.find(p => match(path.pathname, toRegexp(p.path)))

                this.update({
                    activePage,
                    showNotFound: !activePage
                })
                console.log(this.state.activePage)
            },
            onBeforeUnmout() {
                this.anyRouteStream.end()
            }
        }
    </script>

    <style>
        .active {
            font-weight: bolder;
        }
    </style>
</app>